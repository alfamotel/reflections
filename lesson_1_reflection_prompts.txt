How did viewing a diff between two versions of a file help you see the bug that
was introduced?

    Only focussing the differences makes it easier to spot the bug.

How could having easy access to the entire history of a file make you a more
efficient programmer in the long term?

    You can undo work that was not a good idea.
    More free to make mistakes. You learn from making mistakes.
    Less risk of losing work.
    You can see (and learn) from the changes of others.

What do you think are the pros and cons of manually choosing when to create a
commit, like you do in Git, vs having versions automatically saved, like Google
docs does?

    Pro: Less versions more control. Commits can be logical units.
    Con: Less granularity. Requires discipline.

Why do you think some version control systems, like Git, allow saving multiple
files in one commit, while others, like Google Docs, treat each file separately?

    Changes in multiple files can be considered a single unit of change.

How can you use the commands git log and git diff to view the history of files?

    Git log shows commit history and git diff the file changes.
    Don't forget about git log --stat

How might using version control make you more confident to make changes that
could break something?

    You can always go back.

Now that you have your workspace set up, what do you want to try using Git for?

    Just to fiddle around a bit :-)
